## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
######
##
## version $Id: objectBeanImports.vm 1622563 2014-09-04 21:02:24Z tfischer $
##
## This template creates the import statements to allow object-bean conversion
## in the base objects.
## The template expects as input a "table" element from the torque schema
## which was processed by the OMTransformer.  
##
import org.apache.commons.collections.map.IdentityMap;
import java.util.Iterator;
import ${beanPackage}.${beanClassName};
#if ($torqueGen.booleanOption("torque.om.complexObjectModel"))
  ## own foreign keys
  ##
  #set ( $foreignKeyElements = $torqueGen.getChildren("foreign-key") )
  #foreach ($foreignKeyElement in $foreignKeyElements)
    #set ( $foreignTableElement = $foreignKeyElement.getChild("table") )
    #set ( $foreignBeanClassName = $foreignTableElement.getAttribute("beanClassName") )
    #set ( $foreignBeanPackage = $foreignTableElement.getAttribute("beanPackage") )
import ${foreignBeanPackage}.${foreignBeanClassName};
  #end
  ## referencing foreign keys
  ##
  #if ($torqueGen.booleanOption("torque.om.objectIsCaching"))
    #set ( $referencingForeignKeyElements = $torqueGen.getChild("referencing-foreign-keys").getChildren("foreign-key") )
    #foreach ($foreignKeyElement in $referencingForeignKeyElements)
      #set ( $foreignTableElement = $foreignKeyElement.getParent() )
      #set ( $foreignTableName = $foreignTableElement.getAttribute("name") )
      #set ( $foreignBeanClassName = $foreignTableElement.getAttribute("beanClassName") )
      #set ( $foreignBeanPackage = $foreignTableElement.getAttribute("beanPackage") )
      #if ( $foreignTableName != $name )
import ${foreignBeanPackage}.${foreignBeanClassName};
      #end
    #end
  #end
#end
