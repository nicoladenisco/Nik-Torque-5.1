## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
######
##
## version $Id: setterReferencedObject.vm 1331196 2012-04-27 02:56:12Z tfischer $
##
## This template creates the setter method in the object for the "local" part
## of a foreign key. The object in the field represents the "foreign" part
## of the foreign key.  
## The template expects as input a "local-field" element inside a 
## "foreign-key" element from the torque schema, which was generated 
## by the OMTransformer.  
##
#if (!$setterThrows)
  #set ( $setterThrows = "" )
#else
  #set ( $setterThrows = " throws $setterThrows" )
#end
    /**
     * Declares an association between this object and a $fieldType object
     *
     * @param v $fieldType
#if ($setterThrows != "")
     * @${setterThrows.substring(1)}
#end
     */
    public void ${setter}($fieldType v)$setterThrows
    {
#set ( $foreignKeyElement = $torqueGen.getParent() )
#set ( $referenceElements = $foreignKeyElement.getChildren("reference") )
#foreach ( $referenceElement in $referenceElements )
  #set ( $localColumnElement = $referenceElement.getChild("local-column").getChild("column") )
  #set ( $localColumnSetter = $localColumnElement.getAttribute("setter") )
  #set ( $localColumnDefaultValue = $localColumnElement.getAttribute("defaultValue") )
  #set ( $foreignColumnElement = $referenceElement.getChild("foreign-column").getChild("column") )
  #set ( $foreignColumnGetter = $foreignColumnElement.getAttribute("getter") )
  #set ( $localColumnPrimitive = $localColumnElement.getAttribute("primitive") )
  #set ( $foreignColumnPrimitive = $foreignColumnElement.getAttribute("primitive") )
  #if ($localColumnPrimitive == "true" && $foreignColumnPrimitive != "true")
        if (v == null || v.${foreignColumnGetter}() == null)
  #else
        if (v == null)
  #end
        {
            ${localColumnSetter}(${localColumnDefaultValue});
        }
        else
        {
            ${localColumnSetter}(v.${foreignColumnGetter}());
        }
#end
        $field = v;
    }
