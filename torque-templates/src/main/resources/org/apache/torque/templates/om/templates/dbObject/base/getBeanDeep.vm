## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
######
##
## version $Id: getBeanDeep.vm 1331196 2012-04-27 02:56:12Z tfischer $
##
## This template creates source code for a base bean. 
## The template expects as input a "table" element from the torque schema
## which was processed by the OMTransformer.  
##
// getBeanDeep
#set ( $referencingForeignKeyElements = $torqueGen.getChild("referencing-foreign-keys").getChildren("foreign-key") )

    /**
     * Creates a $beanClassName with the contents of this object
     * @param fetcher an istance of table fetcher
     * @param conn db connection for deep populate
     * @return a $beanClassName with the contents of this object
     * @throws TorqueException errors populating objects
     */
    public $beanClassName getBeanDeep(TorqueTableFetcher fetcher, Connection conn)
       throws Exception
    {
      return getBeanDeep(fetcher.getIgnoreTables(), fetcher, conn);
    }

    /**
     * Creates a $beanClassName with the contents of this object
     * @param ignoreTableName table to ignore in deep populate
     * @param fetcher an istance of table fetcher
     * @param conn db connection for deep populate
     * @return a $beanClassName with the contents of this object
     * @throws TorqueException errors populating objects
     */
    public $beanClassName getBeanDeep(Stack<String> ignoreTableName, TorqueTableFetcher fetcher, Connection conn)
       throws Exception
    {
        int deepStrategy = fetcher.getDeepStrategy(${peerClassName}.TABLE_NAME);
        ${beanClassName} result = ($beanClassName) fetcher.getCreatedBeen(this);

        if(result != null)
        {
            // verify if the bean is completed and provide completation
            if(!fetcher.isBeanCompleted(result))
            {
              if(deepStrategy == TorqueTableFetcher.DEEP_GRANT)
                populateBeanMulti(result, ignoreTableName, fetcher, conn);
            }

            // we have already created a bean for this object, return it
            return result;
        }

        // no bean exists for this object; create a new one
        result = new ${beanClassName}();
        fetcher.putCreatedBean(this, result);
        updateBean(result);
        
    #foreach($fk in $referencingForeignKeyElements)
      #set ( $localColumns = $fk.getChild("reference").getChild("local-column").getChildren("column") )
      #foreach($columnElement in $localColumns)
        #set ( $columnFieldTypeJava = $columnElement.getAttribute("fieldType"))
        #set ( $columnFieldGetter   = $columnElement.getAttribute("getter"))
        #set ( $columnNumber        = $columnElement.getAttribute("number"))

        /*
        $columnElement
        */
        
        #if ($columnNumber == "true")
          // test for null object (pk == 0) type=${columnFieldTypeJava} 
          if(${columnFieldGetter}() == 0)
            deepStrategy = TorqueTableFetcher.DEEP_DENY;
        #else
          // test for null object (pk == null) type=${columnFieldTypeJava} 
          if(${columnFieldGetter}() == null)
            deepStrategy = TorqueTableFetcher.DEEP_DENY;
        #end
        
      #end
    #end

        switch(deepStrategy)
        {
          case TorqueTableFetcher.DEEP_DENY:
            break;

          default:
          case TorqueTableFetcher.DEEP_GRANT_NO_RECURSE:
            if(!ignoreTableName.contains(${peerClassName}.TABLE_NAME))
            {
              ignoreTableName.push(${peerClassName}.TABLE_NAME);
              populateBeanMulti(result, ignoreTableName, fetcher, conn);
              ignoreTableName.pop();
            }
            populateBeanOne(result, ignoreTableName, fetcher, conn);
            break;

          case TorqueTableFetcher.DEEP_GRANT:
            if(!ignoreTableName.contains(${peerClassName}.TABLE_NAME))
            {
              populateBeanMulti(result, ignoreTableName, fetcher, conn);
            }
            populateBeanOne(result, ignoreTableName, fetcher, conn);
            break;

          case TorqueTableFetcher.DEEP_GRANT_NO_DEEP:
            populateBeanOne(result, ignoreTableName, fetcher, conn);
            break;
        }
        
        fetcher.setBeanCompleted(result, true);
        return result;
    }
        
    /**
     * Populate one to multi relations (multi is ${tblname}).
     */
    private void populateBeanOne($beanClassName result, Stack<String> ignoreTableName, TorqueTableFetcher fetcher, Connection conn)
       throws Exception
    {
    
/*
        (name=column,
          attributes=(name=a_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=AId,position=1,autoIncrement=false,schemaType=INTEGER,enumClassName=AIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=aId,peerColumnName=A_ID,qualifiedColumnName=r_ab.a_id,getter=getAId,setter=setAId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),
          children=((name=referenced-column,attributes=(),
            children=((name=foreign-key,attributes=(foreignTable=a,foreignKeyGetter=getForeignKeyForA,referencesPrimaryKey=true),
              children=((name=reference,attributes=(local=a_id,foreign=a_id),
                children=((name=local-column,attributes=(),
                          children=(<<loop detected>>)),
                          (name=foreign-column,attributes=(),
        children=((name=column,attributes=(name=a_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=AId,position=1,autoIncrement=true,schemaType=INTEGER,enumClassName=AIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=aId,peerColumnName=A_ID,qualifiedColumnName=a.a_id,getter=getAId,setter=setAId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referencing-column,attributes=(),children=(<<loop detected>>,(name=table,attributes=(name=r_ab,description=r_ab table,idMethod=none,abstract=false,skipSql=false,unqualifiedName=r_ab,javaName=RAb,field=rAb,baseClass=,dbObjectClassName=RAb,baseDbObjectClassName=BaseRAb,peerClassName=RAbPeer,basePeerClassName=BaseRAbPeer,peerImplClassName=RAbPeerImpl,basePeerImplClassName=BaseRAbPeerImpl,beanClassName=RAbBean,baseBeanClassName=BaseRAbBean,mapBuilderClassName=RAb,recordMapperClassName=RAbRecordMapper,baseRecordMapperClassName=BaseRAbRecordMapper,dbObjectPackage=org.apache.torque.test,baseDbObjectPackage=org.apache.torque.test,peerPackage=org.apache.torque.test,basePeerPackage=org.apache.torque.test,recordMapperPackage=org.apache.torque.test,baseRecordMapperPackage=org.apache.torque.test,managerPackage=org.apache.torque.test.manager,baseManagerPackage=org.apache.torque.test.manager.base,beanPackage=org.apache.torque.test.bean,baseBeanPackage=org.apache.torque.test.bean,optimisticLockingMode=selectForUpdate,managerClassName=RAbManager,baseManagerClassName=BaseRAbManager,peerImplFieldName=rAbPeerImpl,peerImplGetter=getRAbPeerImpl,peerImplSetter=setRAbPeerImpl),children=(<<loop detected>>,(name=column,attributes=(name=b_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=BId,position=2,autoIncrement=false,schemaType=INTEGER,enumClassName=BIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=bId,peerColumnName=B_ID,qualifiedColumnName=r_ab.b_id,getter=getBId,setter=setBId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referenced-column,attributes=(),children=((name=foreign-key,attributes=(foreignTable=b,foreignKeyGetter=getForeignKeyForB,referencesPrimaryKey=true),children=((name=reference,attributes=(local=b_id,foreign=b_id),children=((name=local-column,attributes=(),children=(<<loop detected>>)),(name=foreign-column,attributes=(),children=((name=column,attributes=(name=b_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=BId,position=1,autoIncrement=true,schemaType=INTEGER,enumClassName=BIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=bId,peerColumnName=B_ID,qualifiedColumnName=b.b_id,getter=getBId,setter=setBId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)),(name=referencing-column,attributes=(),children=((name=foreign-key,attributes=(foreignTable=b,foreignKeyGetter=getForeignKeyForB,referencesPrimaryKey=true),children=((name=reference,attributes=(local=b_id,foreign=b_id),children=((name=local-column,attributes=(),children=((name=column,attributes=(name=b_id,required=true,type=INTEGER,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=BId,position=3,autoIncrement=true,schemaType=INTEGER,enumClassName=BIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=bId,peerColumnName=B_ID,qualifiedColumnName=c.b_id,getter=getBId,setter=setBId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referenced-column,attributes=(),children=((name=foreign-key,attributes=(foreignTable=r_ab,foreignKeyGetter=getForeignKeyForRAb,referencesPrimaryKey=true),children=((name=reference,attributes=(local=a_id,foreign=a_id),children=((name=local-column,attributes=(),children=((name=column,attributes=(name=a_id,required=true,type=INTEGER,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=AId,position=2,autoIncrement=true,schemaType=INTEGER,enumClassName=AIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=aId,peerColumnName=A_ID,qualifiedColumnName=c.a_id,getter=getAId,setter=setAId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referenced-column,attributes=(),children=(<<loop detected>>,<<loop detected>>)),(name=referenced-column,attributes=(),children=((name=foreign-key,attributes=(foreignTable=a,foreignKeyGetter=getForeignKeyForA,referencesPrimaryKey=true),children=((name=reference,attributes=(local=a_id,foreign=a_id),children=((name=local-column,attributes=(),children=(<<loop detected>>)),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),(name=table,attributes=(name=a,description=A table,abstract=false,skipSql=false,unqualifiedName=a,javaName=A,field=a,idMethod=native,sequenceName=a_SEQ,baseClass=,dbObjectClassName=A,baseDbObjectClassName=BaseA,peerClassName=APeer,basePeerClassName=BaseAPeer,peerImplClassName=APeerImpl,basePeerImplClassName=BaseAPeerImpl,beanClassName=ABean,baseBeanClassName=BaseABean,mapBuilderClassName=A,recordMapperClassName=ARecordMapper,baseRecordMapperClassName=BaseARecordMapper,dbObjectPackage=org.apache.torque.test,baseDbObjectPackage=org.apache.torque.test,peerPackage=org.apache.torque.test,basePeerPackage=org.apache.torque.test,recordMapperPackage=org.apache.torque.test,baseRecordMapperPackage=org.apache.torque.test,managerPackage=org.apache.torque.test.manager,baseManagerPackage=org.apache.torque.test.manager.base,beanPackage=org.apache.torque.test.bean,baseBeanPackage=org.apache.torque.test.bean,optimisticLockingMode=selectForUpdate,managerClassName=AManager,baseManagerClassName=BaseAManager,peerImplFieldName=aPeerImpl,peerImplGetter=getAPeerImpl,peerImplSetter=setAPeerImpl,getCurrentTimestampMethodName=getCurrentTimestamp),children=(<<loop detected>>,(name=column,attributes=(name=name,required=true,type=VARCHAR,size=50,default=a_name,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=2,autoIncrement=true,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=a.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue="a_name",useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),(name=column,attributes=(name=contactdata,required=true,type=VARCHAR,size=500,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Contactdata,position=3,autoIncrement=true,schemaType=VARCHAR,enumClassName=ContactdataEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=contactdata,peerColumnName=CONTACTDATA,qualifiedColumnName=a.contactdata,getter=getContactdata,setter=setContactdata,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),(name=column,attributes=(name=created_at,required=true,type=TIMESTAMP,default=CURRENT_TIMESTAMP,scale=6,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=CreatedAt,position=4,autoIncrement=true,schemaType=TIMESTAMP,enumClassName=CreatedAtEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=java.util.Date,fieldObjectType=java.util.Date,primitive=false,number=false,field=createdAt,peerColumnName=CREATED_AT,qualifiedColumnName=a.created_at,getter=getCreatedAt,setter=setCreatedAt,getterAccessModifier=public,setterAccessModifer=public,defaultValue=getCurrentTimestamp(),useDatabaseDefaultValue=false,resultSetGetter=getTimestamp,sampleObject=new Date()),children=()),(name=column,attributes=(name=updated_at,required=true,type=TIMESTAMP,scale=6,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=UpdatedAt,position=5,autoIncrement=true,schemaType=TIMESTAMP,enumClassName=UpdatedAtEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=java.util.Date,fieldObjectType=java.util.Date,primitive=false,number=false,field=updatedAt,peerColumnName=UPDATED_AT,qualifiedColumnName=a.updated_at,getter=getUpdatedAt,setter=setUpdatedAt,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getTimestamp,sampleObject=new Date()),children=()),(name=column,attributes=(name=enum,type=VARCHAR,size=50,default=x,primaryKey=false,required=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=EnumEnum,position=6,autoIncrement=true,schemaType=VARCHAR,enumClassName=EnumEnum,enumPackage=org.apache.torque.test,generateEnum=true,isEnum=true,fieldType=EnumEnum,enumValueClassName=String,fieldObjectType=String,primitive=false,number=false,field=enumEnum,peerColumnName=ENUM,qualifiedColumnName=a.enum,getter=getEnumEnum,setter=setEnumEnum,getterAccessModifier=public,setterAccessModifer=public,defaultValue=EnumEnum.getByValue("x"),useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=((name=enum-value,attributes=(value=x,javaName=X,javaValue="x"),children=()),(name=enum-value,attributes=(value=y,javaName=Y,javaValue="y"),children=()),(name=enum-value,attributes=(value=z,javaName=Z,javaValue="z"),children=()))),(name=index,attributes=(name=NAME_IDX),children=((name=index-column,attributes=(name=name),children=()))),(name=primary-keys,attributes=(),children=(<<loop detected>>)),(name=referencing-foreign-keys,attributes=(),children=(<<loop detected>>,<<loop detected>>,(name=foreign-key,attributes=(foreignTable=a,foreignKeyGetter=getForeignKeyForA,referencesPrimaryKey=true),children=((name=reference,attributes=(local=a_id,foreign=a_id),children=((name=local-column,attributes=(),children=((name=column,attributes=(name=a_id,primaryKey=true,required=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=AId,position=4,autoIncrement=false,schemaType=INTEGER,enumClassName=AIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=aId,peerColumnName=A_ID,qualifiedColumnName=d.a_id,getter=getAId,setter=setAId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referenced-column,attributes=(),children=(<<loop detected>>,<<loop detected>>)),(name=referenced-column,attributes=(),children=((name=foreign-key,attributes=(foreignTable=r_ab,foreignKeyGetter=getForeignKeyForRAb,referencesPrimaryKey=true),children=((name=reference,attributes=(local=a_id,foreign=a_id),children=((name=local-column,attributes=(),children=(<<loop detected>>)),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),(name=reference,attributes=(local=b_id,foreign=b_id),children=((name=local-column,attributes=(),children=((name=column,attributes=(name=b_id,primaryKey=true,required=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=BId,position=3,autoIncrement=false,schemaType=INTEGER,enumClassName=BIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=bId,peerColumnName=B_ID,qualifiedColumnName=d.b_id,getter=getBId,setter=setBId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=((name=referenced-column,attributes=(),children=(<<loop detected>>,<<loop detected>>)))))),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),<<loop detected>>,(name=local-field,attributes=(field=aRAb,propertyName=RAb,fieldType=RAb,defaultValue=null,getter=getRAb,setter=setRAb,filler=fillRAbs),children=()),(name=local-field-in-bean,attributes=(field=aRAbBean,fieldType=RAbBean,defaultValue=null,getter=getRAbBean,setter=setRAbBean),children=()),(name=foreign-field,attributes=(field=collDs,fieldAccessModifier=protected,criteriaCacheField=lastDCriteria,fieldContainedType=D,fieldType=List<D>,defaultValue=null,getter=getDs,setter=setDs,adder=addD,resetter=resetD,initializer=initDs,isInitialized=isDsInitialized,initializerType=ArrayList<D>,filler=fillDs,setAndSaveMethodName=setAndSaveDs,peerJoinSelectMethod=doSelectJoinRAb,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptRAb),children=()),(name=foreign-field-in-bean,attributes=(field=collDBeans,fieldAccessModifier=protected,fieldContainedType=DBean,fieldType=List<DBean>,initializerType=ArrayList<DBean>,defaultValue=null,getter=getDBeans,setter=setDBeans),children=()))),<<loop detected>>)))))),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),<<loop detected>>,(name=local-field,attributes=(field=aA,propertyName=A,fieldType=A,defaultValue=null,getter=getA,setter=setA,filler=fillAs),children=()),(name=local-field-in-bean,attributes=(field=aABean,fieldType=ABean,defaultValue=null,getter=getABean,setter=setABean),children=()),(name=foreign-field,attributes=(field=collDs,fieldAccessModifier=protected,criteriaCacheField=lastDCriteria,fieldContainedType=D,fieldType=List<D>,defaultValue=null,getter=getDs,setter=setDs,adder=addD,resetter=resetD,initializer=initDs,isInitialized=isDsInitialized,initializerType=ArrayList<D>,filler=fillDs,setAndSaveMethodName=setAndSaveDs,peerJoinSelectMethod=doSelectJoinA,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptA),children=()),(name=foreign-field-in-bean,attributes=(field=collDBeans,fieldAccessModifier=protected,fieldContainedType=DBean,fieldType=List<DBean>,initializerType=ArrayList<DBean>,defaultValue=null,getter=getDBeans,setter=setDBeans),children=()))))),(name=join-getter,attributes=(getter=getRAbsJoinB,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getCsJoinRAb,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getCsJoinB,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getDsJoinRAb,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))))),(name=local-field,attributes=(field=aA,propertyName=A,fieldType=A,defaultValue=null,getter=getA,setter=setA,filler=fillAs),children=()),(name=local-field-in-bean,attributes=(field=aABean,fieldType=ABean,defaultValue=null,getter=getABean,setter=setABean),children=()),(name=foreign-field,attributes=(field=collCs,fieldAccessModifier=protected,criteriaCacheField=lastCCriteria,fieldContainedType=C,fieldType=List<C>,defaultValue=null,getter=getCs,setter=setCs,adder=addC,resetter=resetC,initializer=initCs,isInitialized=isCsInitialized,initializerType=ArrayList<C>,filler=fillCs,setAndSaveMethodName=setAndSaveCs,peerJoinSelectMethod=doSelectJoinA,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptA),children=()),(name=foreign-field-in-bean,attributes=(field=collCBeans,fieldAccessModifier=protected,fieldContainedType=CBean,fieldType=List<CBean>,initializerType=ArrayList<CBean>,defaultValue=null,getter=getCBeans,setter=setCBeans),children=()))),<<loop detected>>)))))),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),(name=reference,attributes=(local=b_id,foreign=b_id),children=((name=local-column,attributes=(),children=(<<loop detected>>)),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),<<loop detected>>,(name=local-field,attributes=(field=aRAb,propertyName=RAb,fieldType=RAb,defaultValue=null,getter=getRAb,setter=setRAb,filler=fillRAbs),children=()),(name=local-field-in-bean,attributes=(field=aRAbBean,fieldType=RAbBean,defaultValue=null,getter=getRAbBean,setter=setRAbBean),children=()),(name=foreign-field,attributes=(field=collCs,fieldAccessModifier=protected,criteriaCacheField=lastCCriteria,fieldContainedType=C,fieldType=List<C>,defaultValue=null,getter=getCs,setter=setCs,adder=addC,resetter=resetC,initializer=initCs,isInitialized=isCsInitialized,initializerType=ArrayList<C>,filler=fillCs,setAndSaveMethodName=setAndSaveCs,peerJoinSelectMethod=doSelectJoinRAb,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptRAb),children=()),(name=foreign-field-in-bean,attributes=(field=collCBeans,fieldAccessModifier=protected,fieldContainedType=CBean,fieldType=List<CBean>,initializerType=ArrayList<CBean>,defaultValue=null,getter=getCBeans,setter=setCBeans),children=()))),<<loop detected>>)),(name=referenced-column,attributes=(),children=(<<loop detected>>,<<loop detected>>)))))),(name=foreign-column,attributes=(),children=(<<loop detected>>)))),(name=table,attributes=(name=b,description=B table,abstract=false,skipSql=false,unqualifiedName=b,javaName=B,field=b,idMethod=native,sequenceName=b_SEQ,baseClass=,dbObjectClassName=B,baseDbObjectClassName=BaseB,peerClassName=BPeer,basePeerClassName=BaseBPeer,peerImplClassName=BPeerImpl,basePeerImplClassName=BaseBPeerImpl,beanClassName=BBean,baseBeanClassName=BaseBBean,mapBuilderClassName=B,recordMapperClassName=BRecordMapper,baseRecordMapperClassName=BaseBRecordMapper,dbObjectPackage=org.apache.torque.test,baseDbObjectPackage=org.apache.torque.test,peerPackage=org.apache.torque.test,basePeerPackage=org.apache.torque.test,recordMapperPackage=org.apache.torque.test,baseRecordMapperPackage=org.apache.torque.test,managerPackage=org.apache.torque.test.manager,baseManagerPackage=org.apache.torque.test.manager.base,beanPackage=org.apache.torque.test.bean,baseBeanPackage=org.apache.torque.test.bean,optimisticLockingMode=selectForUpdate,managerClassName=BManager,baseManagerClassName=BaseBManager,peerImplFieldName=bPeerImpl,peerImplGetter=getBPeerImpl,peerImplSetter=setBPeerImpl),children=(<<loop detected>>,(name=column,attributes=(name=name,required=true,type=VARCHAR,size=50,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=2,autoIncrement=true,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=b.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),(name=unique,attributes=(name=NAME_UNQ,func-params=String val_name,func-passtr=val_name),children=((name=unique-column,attributes=(name=name,size=50,required=true,type=VARCHAR,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=2,autoIncrement=true,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=b.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()))),(name=primary-keys,attributes=(),children=(<<loop detected>>)),(name=referencing-foreign-keys,attributes=(),children=(<<loop detected>>,<<loop detected>>)),(name=join-getter,attributes=(getter=getRAbsJoinA,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getCsJoinRAb,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getCsJoinA,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))))),(name=local-field,attributes=(field=aB,propertyName=B,fieldType=B,defaultValue=null,getter=getB,setter=setB,filler=fillBs),children=()),(name=local-field-in-bean,attributes=(field=aBBean,fieldType=BBean,defaultValue=null,getter=getBBean,setter=setBBean),children=()),(name=foreign-field,attributes=(field=collCs,fieldAccessModifier=protected,criteriaCacheField=lastCCriteria,fieldContainedType=C,fieldType=List<C>,defaultValue=null,getter=getCs,setter=setCs,adder=addC,resetter=resetC,initializer=initCs,isInitialized=isCsInitialized,initializerType=ArrayList<C>,filler=fillCs,setAndSaveMethodName=setAndSaveCs,peerJoinSelectMethod=doSelectJoinB,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptB),children=()),(name=foreign-field-in-bean,attributes=(field=collCBeans,fieldAccessModifier=protected,fieldContainedType=CBean,fieldType=List<CBean>,initializerType=ArrayList<CBean>,defaultValue=null,getter=getCBeans,setter=setCBeans),children=()))),(name=table,attributes=(name=c,description=c table contains fk to ar_ab, a and b,abstract=false,skipSql=false,unqualifiedName=c,javaName=C,field=c,idMethod=native,sequenceName=c_SEQ,baseClass=,dbObjectClassName=C,baseDbObjectClassName=BaseC,peerClassName=CPeer,basePeerClassName=BaseCPeer,peerImplClassName=CPeerImpl,basePeerImplClassName=BaseCPeerImpl,beanClassName=CBean,baseBeanClassName=BaseCBean,mapBuilderClassName=C,recordMapperClassName=CRecordMapper,baseRecordMapperClassName=BaseCRecordMapper,dbObjectPackage=org.apache.torque.test,baseDbObjectPackage=org.apache.torque.test,peerPackage=org.apache.torque.test,basePeerPackage=org.apache.torque.test,recordMapperPackage=org.apache.torque.test,baseRecordMapperPackage=org.apache.torque.test,managerPackage=org.apache.torque.test.manager,baseManagerPackage=org.apache.torque.test.manager.base,beanPackage=org.apache.torque.test.bean,baseBeanPackage=org.apache.torque.test.bean,optimisticLockingMode=selectForUpdate,managerClassName=CManager,baseManagerClassName=BaseCManager,peerImplFieldName=cPeerImpl,peerImplGetter=getCPeerImpl,peerImplSetter=setCPeerImpl),children=((name=column,attributes=(name=c_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=CId,position=1,autoIncrement=true,schemaType=INTEGER,enumClassName=CIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=cId,peerColumnName=C_ID,qualifiedColumnName=c.c_id,getter=getCId,setter=setCId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=()),<<loop detected>>,<<loop detected>>,(name=column,attributes=(name=name,required=true,type=VARCHAR,size=50,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=4,autoIncrement=true,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=c.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),<<loop detected>>,<<loop detected>>,<<loop detected>>,(name=primary-keys,attributes=(),children=(<<loop detected>>)),(name=referencing-foreign-keys,attributes=(),children=()))),<<loop detected>>)))))))),<<loop detected>>,(name=local-field,attributes=(field=aB,propertyName=B,fieldType=B,defaultValue=null,getter=getB,setter=setB,filler=fillBs),children=()),(name=local-field-in-bean,attributes=(field=aBBean,fieldType=BBean,defaultValue=null,getter=getBBean,setter=setBBean),children=()),(name=foreign-field,attributes=(field=collRAbs,fieldAccessModifier=protected,criteriaCacheField=lastRAbCriteria,fieldContainedType=RAb,fieldType=List<RAb>,defaultValue=null,getter=getRAbs,setter=setRAbs,adder=addRAb,resetter=resetRAb,initializer=initRAbs,isInitialized=isRAbsInitialized,initializerType=ArrayList<RAb>,filler=fillRAbs,setAndSaveMethodName=setAndSaveRAbs,peerJoinSelectMethod=doSelectJoinB,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptB),children=()),(name=foreign-field-in-bean,attributes=(field=collRAbBeans,fieldAccessModifier=protected,fieldContainedType=RAbBean,fieldType=List<RAbBean>,initializerType=ArrayList<RAbBean>,defaultValue=null,getter=getRAbBeans,setter=setRAbBeans),children=()))),<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,(name=table,attributes=(name=d,idMethod=none,abstract=false,skipSql=false,unqualifiedName=d,javaName=D,field=d,baseClass=,dbObjectClassName=D,baseDbObjectClassName=BaseD,peerClassName=DPeer,basePeerClassName=BaseDPeer,peerImplClassName=DPeerImpl,basePeerImplClassName=BaseDPeerImpl,beanClassName=DBean,baseBeanClassName=BaseDBean,mapBuilderClassName=D,recordMapperClassName=DRecordMapper,baseRecordMapperClassName=BaseDRecordMapper,dbObjectPackage=org.apache.torque.test,baseDbObjectPackage=org.apache.torque.test,peerPackage=org.apache.torque.test,basePeerPackage=org.apache.torque.test,recordMapperPackage=org.apache.torque.test,baseRecordMapperPackage=org.apache.torque.test,managerPackage=org.apache.torque.test.manager,baseManagerPackage=org.apache.torque.test.manager.base,beanPackage=org.apache.torque.test.bean,baseBeanPackage=org.apache.torque.test.bean,optimisticLockingMode=selectForUpdate,managerClassName=DManager,baseManagerClassName=BaseDManager,peerImplFieldName=dPeerImpl,peerImplGetter=getDPeerImpl,peerImplSetter=setDPeerImpl),children=((name=column,attributes=(name=d_id,required=true,primaryKey=true,type=INTEGER,inheritance=false,protected=false,version=false,javaType=primitive,javaName=DId,position=1,autoIncrement=false,schemaType=INTEGER,enumClassName=DIdEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=int,fieldObjectType=Integer,primitive=true,number=true,field=dId,peerColumnName=D_ID,qualifiedColumnName=d.d_id,getter=getDId,setter=setDId,getterAccessModifier=public,setterAccessModifer=public,defaultValue=0,useDatabaseDefaultValue=false,resultSetGetter=getInt,sampleObject=Integer.valueOf(0)),children=()),(name=column,attributes=(name=name,required=true,size=255,type=VARCHAR,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=2,autoIncrement=false,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=d.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),<<loop detected>>,<<loop detected>>,<<loop detected>>,<<loop detected>>,(name=primary-keys,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)),(name=referencing-foreign-keys,attributes=(),children=()))),<<loop detected>>)))),(name=column,attributes=(name=name,required=true,type=VARCHAR,size=50,primaryKey=false,inheritance=false,protected=false,version=false,javaType=primitive,javaName=Name,position=3,autoIncrement=false,schemaType=VARCHAR,enumClassName=NameEnum,enumPackage=org.apache.torque.test,generateEnum=false,isEnum=false,fieldType=String,fieldObjectType=String,primitive=false,number=false,field=name,peerColumnName=NAME,qualifiedColumnName=r_ab.name,getter=getName,setter=setName,getterAccessModifier=public,setterAccessModifer=public,defaultValue=null,useDatabaseDefaultValue=false,resultSetGetter=getString,sampleObject=""),children=()),<<loop detected>>,<<loop detected>>,(name=primary-keys,attributes=(),children=(<<loop detected>>,<<loop detected>>)),(name=referencing-foreign-keys,attributes=(),children=(<<loop detected>>,<<loop detected>>)),(name=join-getter,attributes=(getter=getCsJoinA,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getCsJoinB,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))),(name=join-getter,attributes=(getter=getDsJoinA,getterAccessModifier=protected),children=((name=local,attributes=(),children=(<<loop detected>>)),(name=foreign,attributes=(),children=(<<loop detected>>)))))),<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)))))))),<<loop detected>>,(name=local-field,attributes=(field=aA,propertyName=A,fieldType=A,defaultValue=null,getter=getA,setter=setA,filler=fillAs),children=()),(name=local-field-in-bean,attributes=(field=aABean,fieldType=ABean,defaultValue=null,getter=getABean,setter=setABean),children=()),(name=foreign-field,attributes=(field=collRAbs,fieldAccessModifier=protected,criteriaCacheField=lastRAbCriteria,fieldContainedType=RAb,fieldType=List<RAb>,defaultValue=null,getter=getRAbs,setter=setRAbs,adder=addRAb,resetter=resetRAb,initializer=initRAbs,isInitialized=isRAbsInitialized,initializerType=ArrayList<RAb>,filler=fillRAbs,setAndSaveMethodName=setAndSaveRAbs,peerJoinSelectMethod=doSelectJoinA,peerJoinAllExceptSelectMethod=doSelectJoinAllExceptA),children=()),(name=foreign-field-in-bean,attributes=(field=collRAbBeans,fieldAccessModifier=protected,fieldContainedType=RAbBean,fieldType=List<RAbBean>,initializerType=ArrayList<RAbBean>,defaultValue=null,getter=getRAbBeans,setter=setRAbBeans),children=()))),<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>)),(name=referencing-column,attributes=(),children=(<<loop detected>>,<<loop detected>>,<<loop detected>>))))
     */

      ## $torqueGen.mergepoint("getBeanDeepReferencingObjects")        
    }
        
    
    /**
     * Populate one to multi relations (one is ${table.JavaName}).
     */
    private void populateBeanMulti($beanClassName result, Stack<String> ignoreTableName, TorqueTableFetcher fetcher, Connection conn)
       throws Exception
    {
      if(isNew())
        return;
        
      ## $torqueGen.mergepoint("getBeanDeepReferencedObjects")                
    }    
    
    